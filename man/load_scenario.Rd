% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build-scenario.R
\name{load_scenario}
\alias{load_scenario}
\title{Load Scenario}
\usage{
load_scenario(
  scenario,
  params = fallRunDSM::r_to_r_baseline_params,
  species = c("fr", "wr", "sr", "st", "lfr"),
  spawn_decay_rate = fallRunDSM::r_to_r_baseline_params$spawn_decay_rate,
  rear_decay_rate = fallRunDSM::r_to_r_baseline_params$rear_decay_rate,
  spawn_decay_multiplier = fallRunDSM::r_to_r_baseline_params$spawn_decay_multiplier
)
}
\arguments{
\item{scenario}{a list containing scenario information, see details below}

\item{params}{Lifecycle model"params" data object. See the example for more details.}

\item{species}{provide \code{"fr"}, \code{"lfr"}, \code{"wr"}, \code{"sr"}, or \code{"st"} for fall run, late-fall run,
winter run, spring run, or steelhead respectively to designate which \code{params} data object
to be modified. For example, supply \code{"fr"} if running the \code{fallRunDSM::fall_run_model}.}

\item{spawn_decay_rate}{length 31 vector of 1 - spawning decay rate estimates}

\item{rear_decay_rate}{length 31 vector of 1 - rearing decay rate estimates}

\item{stochastic}{boolean, TRUE for creating scenarios with stochasticity}
}
\description{
Modify baseline model inputs based on a set of actions
}
\details{
A scenario is a list of 31 by 20 matrices with each value representing the units
of effort to apply in a tributarty in a given year for a action type.

The scenario list should be formatted like this:

\code{list(spawn = matrix(), inchannel = matrix(), floodplain = matrix(), survival = matrix())}

A scenario can also include a boolean vector named \code{no_decay} if the user
desires to exclude a watershed from spawning and rearing habitat decay.
}
\examples{
scenario_df <- data.frame(watershed = rep("All", 5), 
                          action = c(2, 14, 16, 18, 21), 
                          years = rep("All", 5))

custom_scenario <- get_action_matrices()

params <- fallRunDSM::r_to_r_baseline_params

scenario_custom <- load_scenario(scenario = custom_scenario,
                                 species = R2Rscenario::species$FALL_RUN,
                                 params = params)

}
